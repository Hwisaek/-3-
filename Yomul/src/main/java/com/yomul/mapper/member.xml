<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">

	<!-- 구매 내역 가져오기 -->
	<select id="getBuyList" parameterType="map" resultType="com.yomul.vo.ProductVO">
		SELECT 
			*
		FROM 
		(
			SELECT 
				  ROWNUM AS RNO
				, P.*
			FROM
			(
				SELECT 
					  TH.NO TH_NO
					, TH.PRODUCT_NO NO
					, TH.BUYER
					, TO_CHAR(TH.TRADE_DATE, 'YYYY"년" MM"월" DD"일"') PDATE
					, P.TITLE
					, P.PRICE
					, P.SELLER
					, M.NICKNAME
					, F.IMG
				FROM 
						 YOMUL_TRADE_HISTORY TH 
					JOIN YOMUL_PRODUCTS P ON TH.PRODUCT_NO = P.NO 
					JOIN YOMUL_MEMBERS M ON P.SELLER = M.NO 
					LEFT OUTER JOIN 
					(
						SELECT * 
						FROM 
						(
						SELECT 
							  ROW_NUMBER() OVER (PARTITION BY ARTICLE_NO ORDER BY NO) RANK
							, ARTICLE_NO || '_' || NO || '_' || FILENAME IMG
							, ARTICLE_NO 
						FROM YOMUL_FILES
						) 
						WHERE 
							RANK = 1
					) F ON P.NO = F.ARTICLE_NO
				WHERE 
					TH.BUYER = #{member.no}
				ORDER BY 
					TO_NUMBER(SUBSTR(NO, 3)) DESC
			) P
		)
		WHERE
				RNO > 10 * (#{page} - 1) 
<![CDATA[	AND RNO <= 10 * #{page}			]]>
	</select>

	<!-- 판매 내역 가져오기 -->
	<select id="getSellList" parameterType="map" resultType="com.yomul.vo.ProductVO">
		SELECT 
			*
		FROM
		(
			SELECT 
				  ROWNUM RNO
				, P.*
			FROM 
			(
				SELECT 
					  TO_CHAR(PDATE, 'YYYY"년" MM"월" DD"일"') PDATE
					, NO
					, STATE
					, TITLE
					, PRICE
					, IMG
				FROM 
					YOMUL_PRODUCTS P LEFT OUTER JOIN 
					(
					SELECT
						*
					FROM
					(
						SELECT
							  ROW_NUMBER() OVER (PARTITION BY ARTICLE_NO ORDER BY NO) RANK
							, ARTICLE_NO || '_' || NO || '_' || FILENAME IMG
							, ARTICLE_NO 
						FROM
							YOMUL_FILES F
					)
					WHERE
						RANK = 1
					) F ON P.NO = F.ARTICLE_NO
				WHERE
					SELLER = #{member.no}
				ORDER BY
					TO_NUMBER(SUBSTR(P.NO, 2)) DESC
			) P
		)
		WHERE
				RNO > 10 * (#{page} - 1) 
<![CDATA[	AND RNO <= 10 * #{page}			]]>
	</select>

	<!-- 판매완료 수 가져오기 -->
	<select id="getSellingcount" parameterType="string" resultType="_int">
		SELECT
			COUNT(*) 
		FROM
			YOMUL_PRODUCTS 
		WHERE
				SELLER = #{no} 
			AND STATE = 'SELLING'
	</select>

	<!-- 판매중 수 가져오기 -->
	<select id="getSoldCount" parameterType="string" resultType="_int">
		SELECT 
			COUNT(*) 
		FROM 
			YOMUL_PRODUCTS 
		WHERE
				SELLER = #{no}
			AND STATE = 'SOLD'
	</select>

	<!-- 찜 목록 가져오기 -->
	<select id="getMyFavoriteList" parameterType="map" resultType="com.yomul.vo.ProductVO">
		SELECT
			*
		FROM
		(
			SELECT
				  ROWNUM AS RNO
				, FL.*
			FROM
			(
				SELECT
					  FL.PRODUCT_NO NO
					, P.TITLE
					, P.PRICE
					, M.NICKNAME SELLER_NICKNAME
					, F.IMG
				FROM
				(
					SELECT
						PRODUCT_NO
					FROM
						YOMUL_FAVORITE_LISTS
					WHERE
						MEMBER_NO = #{member.no}
					ORDER BY
						FDATE DESC
				) FL JOIN
					YOMUL_PRODUCTS P
				ON FL.PRODUCT_NO = P.NO JOIN
					YOMUL_MEMBERS M 
				ON P.SELLER = M.NO LEFT OUTER JOIN
					(
						SELECT
							  IMG
							, ARTICLE_NO
						FROM
						(
							SELECT
								  ARTICLE_NO || '_' || NO || '_' || FILENAME IMG
								, ARTICLE_NO
							FROM
								YOMUL_FILES
							WHERE
								NO = 1
							ORDER BY
								NO
						)
					) F ON P.NO = F.ARTICLE_NO
			) FL
		)
		WHERE
				RNO > 10 * (#{page} - 1) 
<![CDATA[	AND RNO <= 10 * #{page}			]]>
	</select>
	
	<!-- 비밀번호 일치 확인 -->
	<select id="checkPW" parameterType="com.yomul.vo.MemberVO" resultType="_int">
		SELECT
			COUNT(*)
		FROM
			YOMUL_MEMBERS
		WHERE
				EMAIL = #{email}
			AND PW = #{pw}
	</select>

	<!-- 회원 탈퇴 신청 -->
	<update id="withdrawal" parameterType="com.yomul.vo.MemberVO">
		UPDATE
			YOMUL_MEMBERS
		SET
			WITHDRAWAL = 1
		WHERE
			NO = #{no}
	</update>
	
	<!-- 회원 탈퇴 취소 -->
	<update id="cancleWithdrawal" parameterType="com.yomul.vo.MemberVO">
		UPDATE
			YOMUL_MEMBERS
		SET
			WITHDRAWAL = 0
		WHERE
			NO = #{no}
	</update>

	<!-- 카카오톡 연동하기 -->
	<update id="kakaoRegister" parameterType="com.yomul.vo.MemberVO">
		UPDATE
			YOMUL_MEMBERS
		SET
			KAKAO_ID = #{kakao_id}
		WHERE
			NO = #{no}
	</update>
	
	<!-- Hastsalt 가져오기 -->
	<select id="getHashsalt" parameterType="com.yomul.vo.MemberVO" resultType="string">
		SELECT HASHSALT
		FROM YOMUL_MEMBERS
		WHERE EMAIL = #{email}
	</select>
	
	<!-- 로그인 -->
	<select id="getLoginResult" parameterType="com.yomul.vo.MemberVO" resultType="com.yomul.vo.MemberVO">
		SELECT
			  NO
			, NICKNAME
			, EMAIL
			, PROFILEIMG
			, AUTHORITY
		FROM
			V_Y_MEMBERS
		WHERE
		<choose>
		<when test="kakao_id != null">
			KAKAO_ID = #{kakao_id}
		</when>
		<when test="kakao_id == null">
				EMAIL= #{email}
			AND PW = #{pw}
		</when>
		</choose>
	</select>

	<!-- 회원 삭제 -->
	<delete id="deletemember" parameterType="com.yomul.vo.MemberVO">
		DELETE
			FROM YOMUL_MEMBERS 
		WHERE
				NO = #{no}
			AND WITHDRAWAL = 1
			
	</delete>

	<!-- 회원 목록 가져오기 -->
	<select id="getmemberlist" parameterType="map" resultType="com.yomul.vo.MemberVO">
		SELECT
			  RNO
			, NO
			, EMAIL
			, NICKNAME
			, PHONE
			, MDATE
			, WITHDRAWAL
		FROM
		(
			SELECT
				ROWNUM AS RNO
				, M.*
			FROM
			(
				SELECT
					  TO_NUMBER(SUBSTR(NO, 2)) AS NO_NUM
					, NO
					, EMAIL
					, NICKNAME
					, NVL(PHONE, ' ') AS PHONE
					, MDATE
					, WITHDRAWAL
				FROM
					YOMUL_MEMBERS 
				WHERE
						LOWER(NICKNAME) LIKE ('%' || LOWER(#{search, jdbcType=VARCHAR}) || '%')
					OR  LOWER(EMAIL) LIKE ('%' || LOWER(#{search, jdbcType=VARCHAR}) || '%')
				ORDER BY
					NO_NUM DESC
			) M
		)
		WHERE
				RNO > 10 * (#{page} - 1) 
<![CDATA[	AND RNO <= 10 * #{page}			]]>
	</select>
	
	<!-- 회원 목록 페이지 수 가져오기 -->
	<select id="gettotalpagecount" parameterType="string" resultType="_int">
		SELECT
			CEIL(COUNT(*)/10) TOTAL_PAGE
		FROM
			YOMUL_MEMBERS
		WHERE
				LOWER(NICKNAME) LIKE ('%' || LOWER(#{search, jdbcType=VARCHAR}) || '%')
			OR  LOWER(EMAIL) LIKE ('%' || LOWER(#{search, jdbcType=VARCHAR}) || '%')
	</select>
	
	<!-- 회원가입 -->
	<insert id="join" parameterType="com.yomul.vo.MemberVO">
		INSERT INTO YOMUL_MEMBERS
		(
			  NO
			, EMAIL
			, PW
			, NICKNAME
			, HASHSALT
			, SUBSCRIBE
		) 
		VALUES
		(
			  'M'||YOMUL_MEMBERS_NO_SEQ.NEXTVAL
			, #{email}
			, #{pw}
			, #{nickname}
			, #{hashsalt}
			, #{subscribe}
		)
	</insert>
	
	<!-- 프로필 정보 가져오기 -->
	<select id="getmyprofileinfo" parameterType="com.yomul.vo.MemberVO" resultType="com.yomul.vo.MemberVO">
		SELECT
			  NO
			, EMAIL
			, NICKNAME
			, PHONE
			, GENDER
			, INTRO
			, WITHDRAWAL
		FROM 
			YOMUL_MEMBERS
		WHERE
			NO = #{no}
	</select>
	
	<!-- 프로필 사진 가져오기 -->
	<select id="getmyprofileimg" parameterType="com.yomul.vo.MemberVO" resultType="com.yomul.vo.FileVO">
		SELECT 
			  ARTICLE_NO
			, NO
			, FILENAME 
		FROM 
			YOMUL_FILES 
		WHERE 
			ARTICLE_NO = #{no}
	</select>
	
	<!-- 프로필 정보 수정 -->
	<insert id="setmyprofileinfo" parameterType="com.yomul.vo.MemberVO">
		UPDATE
			YOMUL_MEMBERS
		SET
			  NICKNAME = #{nickname}
			 <if test="phone != null">
			, PHONE = #{phone}
			 </if>
			<if test="gender != null">
			, GENDER = #{gender}
			</if>
			<if test="intro != null">
			, INTRO = #{intro}
			</if>
		WHERE
			NO = #{no}
	</insert>
	
	<!-- 구매내역 수 가져오기 -->
	<select id="getbuycount" parameterType="com.yomul.vo.MemberVO" resultType="int">
		SELECT COUNT(*) 
		FROM YOMUL_TRADE_HISTORY 
		WHERE BUYER = #{no}
	</select>
	
	<!-- 판매내역 수 가져오기 -->
	<select id="getsellcount" parameterType="com.yomul.vo.MemberVO" resultType="int">
		SELECT COUNT(*) 
		FROM YOMUL_PRODUCTS
		 WHERE SELLER = #{no}
	</select>
	
	<!-- 찜 목록 수 가져오기 -->
	<select id="getfavoritecount" parameterType="com.yomul.vo.MemberVO" resultType="int">
		SELECT COUNT(*) 
		FROM YOMUL_FAVORITE_LISTS 
		WHERE MEMBER_NO = #{no}
	</select>
	
	<!-- 이메일 중복 확인 -->
	<select id="emailcheck" parameterType="string" resultType="int">
		SELECT COUNT(EMAIL) 
		FROM YOMUL_MEMBERS 
		WHERE LOWER(EMAIL) = LOWER(#{email})
	</select>
	
	<!-- 닉네임 중복 확인 -->
	<select id="nicknamecheck" parameterType="string" resultType="int">
		SELECT COUNT(NICKNAME) 
		FROM YOMUL_MEMBERS 
		WHERE LOWER(NICKNAME) = LOWER(#{nickname})
	</select>
</mapper>